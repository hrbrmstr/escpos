// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// png_to_escpos_raster
std::string png_to_escpos_raster(std::string png_file, std::string raster_path, bool color);
RcppExport SEXP _escpos_png_to_escpos_raster(SEXP png_fileSEXP, SEXP raster_pathSEXP, SEXP colorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type png_file(png_fileSEXP);
    Rcpp::traits::input_parameter< std::string >::type raster_path(raster_pathSEXP);
    Rcpp::traits::input_parameter< bool >::type color(colorSEXP);
    rcpp_result_gen = Rcpp::wrap(png_to_escpos_raster(png_file, raster_path, color));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_escpos_png_to_escpos_raster", (DL_FUNC) &_escpos_png_to_escpos_raster, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_escpos(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
